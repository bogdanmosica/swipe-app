{
  "name": "api",
  "$schema": "../../node_modules/nx/schemas/project-schema.json",
  "sourceRoot": "apps/api/src",
  "projectType": "application",
  "targets": {
    "seed:run": {
      "executor": "nx:run-commands",
      "options": {
        "command": "ts-node -P apps/api/tsconfig.json -r tsconfig-paths/register apps/api/src/app/database/seed/run-seed.ts",
        "envFile": "apps/api/.env",
        "color": true
      }
    },
    "typeorm": {
      "executor": "nx:run-commands",
      "options": {
        "command": "ts-node -P apps/api/tsconfig.json -r tsconfig-paths/register ./node_modules/typeorm/cli.js",
        "envFile": "apps/api/.env",
        "color": true
      }
    },
    "migration:generate": {
      "executor": "nx:run-commands",
      "options": {
        "command": "nx run api:typeorm -- --dataSource=apps/api/src/app/database/data-source.ts migration:generate",
        "envFile": "apps/api/.env",
        "color": true
      }
    },
    "migration:create": {
      "executor": "nx:run-commands",
      "options": {
        "command": "nx run api:typeorm -- migration:create",
        "envFile": "apps/api/.env",
        "color": true
      }
    },
    "migration:run": {
      "executor": "nx:run-commands",
      "options": {
        "command": "nx run api:typeorm -- --dataSource=apps/api/src/app/database/data-source.ts migration:run",
        "envFile": "apps/api/.env",
        "color": true
      }
    },
    "migration:revert": {
      "executor": "nx:run-commands",
      "options": {
        "command": "nx run api:typeorm -- --dataSource=apps/api/src/app/database/data-source.ts migration:revert",
        "envFile": "apps/api/.env",
        "color": true
      }
    },
    "schema:drop": {
      "executor": "nx:run-commands",
      "options": {
        "command": "nx run api:typeorm -- --dataSource=apps/api/src/app/database/data-source.ts schema:drop",
        "envFile": "apps/api/.env",
        "color": true
      }
    },
    "build": {
      "executor": "@nx/webpack:webpack",
      "outputs": [
        "{options.outputPath}"
      ],
      "defaultConfiguration": "production",
      "options": {
        "target": "node",
        "compiler": "tsc",
        "outputPath": "dist/apps/api",
        "main": "apps/api/src/main.ts",
        "tsConfig": "apps/api/tsconfig.app.json",
        "assets": [
          "apps/api/src/assets",
          "apps/api/src/assets/mail-templates",
          "apps/api/src/assets/i18n",
          {
            "input": "libs/remotion-composition-studio/src/lib",
            "glob": "**/*",
            "output": "apps/remotion-composition-studio"
          }
        ],
        "isolatedConfig": true,
        "webpackConfig": "apps/api/webpack.config.js"
      },
      "configurations": {
        "development": {},
        "production": {}
      }
    },
    "serve": {
      "executor": "@nx/js:node",
      "defaultConfiguration": "development",
      "options": {
        "buildTarget": "api:build"
      },
      "configurations": {
        "development": {
          "buildTarget": "api:build:development"
        },
        "production": {
          "buildTarget": "api:build:production"
        }
      }
    },
    "lint": {
      "executor": "@nx/linter:eslint",
      "outputs": [
        "{options.outputFile}"
      ],
      "options": {
        "lintFilePatterns": [
          "apps/api/**/*.ts"
        ]
      }
    },
    "test": {
      "executor": "@nx/jest:jest",
      "outputs": [
        "{workspaceRoot}/coverage/{projectRoot}"
      ],
      "options": {
        "jestConfig": "apps/api/jest.config.ts",
        "passWithNoTests": true
      },
      "configurations": {
        "ci": {
          "ci": true,
          "codeCoverage": true
        }
      }
    }
  },
  "tags": []
}